{"version":3,"sources":["webpack:///../node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack:///../node_modules/gatsby-plugin-dark-mode/index.js","webpack:///../gatsby-theme-maskzh/src/components/article.tsx","webpack:///../gatsby-theme-maskzh/src/templates/blog-post.tsx"],"names":["_interopRequireDefault","require","exports","__esModule","default","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","_ThemeToggler","Article","markdownRemark","frontmatter","title","tags","className","map","tag","key","onClick","lastTag","split","reverse","navigate","classnames","dangerouslySetInnerHTML","__html","html","BlogPost","slug","pathContext","data","site","posts","useContext","PostContext","location","useLocation","queryString","parse","search","articles","filter","article","isTagInclude","sort","a","b","dayjs","date","unix","slice","to","siteMetadata","style","maxWidth","content","format"],"mappings":"6FAEA,IAAIA,EAAyBC,EAAQ,QAErCC,EAAQC,YAAa,EACrBD,EAAQE,aAAU,EAElB,IAAIC,EAA0BL,EAAuBC,EAAQ,SAEzDK,EAAkBN,EAAuBC,EAAQ,SAEjDM,EAAmBP,EAAuBC,EAAQ,SAElDO,EAASR,EAAuBC,EAAQ,SAExCQ,EAAaT,EAAuBC,EAAQ,SAE5CS,EAA4B,SAAUC,GAGxC,SAASD,IAGP,IAFA,IAAIE,EAEKC,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAOzB,OAJAN,EAAQD,EAAiBQ,KAAKC,MAAMT,EAAkB,CAACU,MAAMC,OAAON,KAAUK,MAC9E,EAAId,EAAiBH,UAAS,EAAIC,EAAwBD,SAASQ,GAAQ,QAAS,CAClFW,MAAyB,oBAAXC,OAAyBA,OAAOC,QAAU,OAEnDb,GAbT,EAAIN,EAAgBF,SAASM,EAAcC,GAgB3C,IAAIe,EAAShB,EAAaiB,UAuB1B,OArBAD,EAAOE,kBAAoB,WACzB,IAAIC,EAASR,KAEbG,OAAOM,gBAAkB,WACvBD,EAAOE,SAAS,CACdR,MAAOC,OAAOC,YAKpBC,EAAOM,YAAc,SAAqBT,GACxCC,OAAOS,oBAAoBV,IAG7BG,EAAOQ,OAAS,WACd,OAAoB1B,EAAOJ,QAAQ+B,cAAcd,KAAKe,MAAMC,SAAU,CACpEd,MAAOF,KAAKiB,MAAMf,MAClBS,YAAaX,KAAKW,eAIftB,EAxCuB,CAyC9BF,EAAOJ,QAAQmC,WAEjB7B,EAAa8B,UAAY,CACvBH,SAAU5B,EAAWL,QAAQqC,KAAKC,YAEpC,IAAIC,EAAWjC,EACfR,EAAQE,QAAUuC,G,kCC9DlB,IAAI3C,EAAyBC,EAAQ,QAErCC,EAAQC,YAAa,EAErB,IAAIyC,EAAgB5C,EAAuBC,EAAQ,SAEnDC,EAAQQ,aAAekC,EAAcxC,S,+MCHtB,SAASyC,EAAT,GAAqC,IAAlBC,EAAkB,EAAlBA,eAAkB,EAG9CA,EADFC,YAAeC,EAFiC,EAEjCA,MAAOC,EAF0B,EAE1BA,KAQxB,OACE,6BAASC,UAAU,QACjB,4BAAQA,UAAU,QAChB,wBAAIA,UAAU,2CAA2CF,GACxDC,GACC,yBAAKC,UAAU,SACZD,EAAKE,KAAI,SAACC,GAAD,OACR,0BACEC,IAAKD,EACLF,UAAU,8IACVI,QAAS,kBAdfC,EAcgCH,EAdVI,MAAM,KAAKC,UAAU,QACjDC,mBAAS,SAASH,GAFpB,IACQA,IAWI,IAKIH,QAMZ,kBAAC,eAAD,MACG,gBAAG7B,EAAH,EAAGA,MAAH,OACC,yBACE2B,UAAWS,IAAW,gBAAiBpC,GACvCqC,wBAAyB,CAAEC,OAAQf,EAAegB,Y,wCC3B/C,SAASC,EAAT,GAA6E,IAA1CC,EAA0C,EAAzDC,YAAeD,KAA0C,IAAlCE,KAAQC,EAA0B,EAA1BA,KAAMrB,EAAoB,EAApBA,eAC9DsB,EAAUC,qBAAWC,KAArBF,MACFG,EAAWC,wBACXpB,EAAMqB,IAAYC,MAAMH,EAASI,QAAQvB,IACzCwB,EAAWR,EACdS,QAAO,SAACC,GAAD,OAAaC,YAAaD,EAAQ7B,KAAMG,MAC/CyB,QAAO,SAACC,GAAD,OAAaA,EAAQd,OAASA,KACrCgB,MAAK,SAACC,EAAGC,GAAJ,OAAUC,IAAMD,EAAEE,MAAMC,OAASF,IAAMF,EAAEG,MAAMC,UACpDC,MAAM,EAAG,GAEZ,OACE,yBAAKpC,UAAU,8BACb,kBAAC,OAAD,CAAMqC,GAAG,IAAIrC,UAAU,mEACpBiB,EAAKqB,aAAaxC,OAErB,yBAAKE,UAAU,eAAeuC,MAAO,CAAEC,SAAU,MAC/C,kBAAC,IAAD,CAAK1C,MAAOF,EAAeC,YAAYC,QACvC,kBAACH,EAAD,CAASC,eAAgBA,IACxB8B,EAAS7D,OAAS,GACjB,wBAAImC,UAAU,4FAAd,QAID0B,EAASzB,KAAI,gBAAGH,EAAH,EAAGA,MAAOoC,EAAV,EAAUA,KAAMO,EAAhB,EAAgBA,QAAS3B,EAAzB,EAAyBA,KAAzB,OACZ,kBAAC,OAAD,CAAMX,IAAKW,EAAMuB,GAAIvB,EAAMd,UAAU,4DACnC,0BAAMA,UAAU,wDACbiC,IAAMC,GAAMQ,OAAO,eAEtB,wBAAI1C,UAAU,2DAA2DF,GACzE,uBAAGE,UAAU,iDAAiDyC","file":"component---gatsby-theme-maskzh-src-templates-blog-post-tsx-9ff116f7f1af2cbac95c.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","import { navigate } from '@reach/router';\nimport classnames from 'classnames';\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode';\nimport React from 'react';\n\nexport default function Article({ markdownRemark }) {\n  const {\n    frontmatter: { title, tags },\n  } = markdownRemark;\n\n  function onClickTag(fullTagName: string) {\n    const lastTag = fullTagName.split('/').reverse()[0];\n    navigate(`/?tag=${lastTag}`);\n  }\n\n  return (\n    <article className=\"py-8\">\n      <header className=\"mb-8\">\n        <h1 className=\"mb-4 text-2xl font-bold dark:text-white\">{title}</h1>\n        {tags && (\n          <div className=\"-mx-1\">\n            {tags.map((tag: string) => (\n              <span\n                key={tag}\n                className=\"inline-block px-3 py-1 mx-1 text-sm bg-red-50 rounded-full cursor-pointer hover:bg-red-500 hover:text-white dark:bg-red-900 dark:text-white\"\n                onClick={() => onClickTag(tag)}\n              >\n                #{tag}\n              </span>\n            ))}\n          </div>\n        )}\n      </header>\n      <ThemeToggler>\n        {({ theme }) => (\n          <div\n            className={classnames('markdown-body', theme)}\n            dangerouslySetInnerHTML={{ __html: markdownRemark.html }}\n          ></div>\n        )}\n      </ThemeToggler>\n    </article>\n  );\n}\n","import { useLocation } from '@reach/router';\nimport dayjs from 'dayjs';\nimport { graphql, Link } from 'gatsby';\nimport queryString from 'query-string';\nimport React, { useContext } from 'react';\nimport Article from '../components/article';\nimport SEO from '../components/seo';\nimport PostContext from '../context/PostContext';\nimport { isTagInclude } from '../utils/Tag';\n\nexport default function BlogPost({ pathContext: { slug }, data: { site, markdownRemark } }) {\n  const { posts } = useContext(PostContext);\n  const location = useLocation();\n  const tag = queryString.parse(location.search).tag;\n  const articles = posts\n    .filter((article) => isTagInclude(article.tags, tag as string))\n    .filter((article) => article.slug !== slug)\n    .sort((a, b) => dayjs(b.date).unix() - dayjs(a.date).unix())\n    .slice(0, 3);\n\n  return (\n    <div className=\"min-h-screen dark:bg-black\">\n      <Link to=\"/\" className=\"block py-2 shadow text-lg font-bold text-center dark:text-white\">\n        {site.siteMetadata.title}\n      </Link>\n      <div className=\"px-6 mx-auto\" style={{ maxWidth: 800 }}>\n        <SEO title={markdownRemark.frontmatter.title} />\n        <Article markdownRemark={markdownRemark} />\n        {articles.length > 0 && (\n          <h3 className=\"pt-6 text-base font-medium border-t border-gray-100 dark:text-white dark:border-gray-900\">\n            延伸阅读\n          </h3>\n        )}\n        {articles.map(({ title, date, content, slug }) => (\n          <Link key={slug} to={slug} className=\"block py-4 border-b border-gray-100 dark:border-gray-900\">\n            <time className=\"text-gray-400 text-xs font-medium dark:text-gray-600\">\n              {dayjs(date).format('YYYY-MM-DD')}\n            </time>\n            <h3 className=\"text-base text-black font-bold truncate dark:text-white\">{title}</h3>\n            <p className=\"mt-1 text-sm text-gray-800 dark:text-gray-200\">{content}</p>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      rawMarkdownBody\n      timeToRead\n      wordCount {\n        paragraphs\n        sentences\n        words\n      }\n      frontmatter {\n        title\n        tags\n        created\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}