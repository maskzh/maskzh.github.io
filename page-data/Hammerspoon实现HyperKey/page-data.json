{"componentChunkName":"component---gatsby-theme-maskzh-src-templates-blog-post-tsx","path":"/Hammerspoon实现HyperKey/","result":{"data":{"site":{"siteMetadata":{"title":"ZYC's Blog"}},"markdownRemark":{"html":"<p>一直在使用 <a href=\"https://karabiner-elements.pqrs.org/\">Karabiner-Elements</a> 的 HyperKey 的功能（将 cmd + option + control + shirft 绑定到 caplock）。</p>\n<p>但更新到 <code>Big sur</code> 后发现 HyperKey 不能用。而且到目前为止也没有等到更新，于是开始寻找替代方案。</p>\n<p>最终选择 <a href=\"https://www.hammerspoon.org/\">Hammerspoon</a> + <a href=\"https://developer.apple.com/library/archive/technotes/tn2450/_index.html\">hidutil</a> 。通过 Hammerspoon 实现快捷键的绑定，然后使用 hidutil 将 <code>caplock</code> 改为 HyperKey。</p>\n<p>Hammerspoon 的安装见 <a href=\"https://www.hammerspoon.org/go/\">Getting Started with Hammerspoon</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> --cask hammerspoon</code></pre></div>\n<p>建立 Hammerspoon 的配置文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p ~/.hammerspoon\n<span class=\"token builtin class-name\">cd</span> ~/.hammerspoon\n<span class=\"token function\">curl</span> -O https://github.com/evantravers/hammerspoon-config/blob/38a7d8c0ad2190d1563d681725628e4399dcbe6c/hyper.lua\n<span class=\"token function\">touch</span> init.lua</code></pre></div>\n<p>HyperKey 的实现参考了 <a href=\"https://github.com/evantravers/hammerspoon-config/blob/38a7d8c0ad2190d1563d681725628e4399dcbe6c/hyper.lua\">evantravers/hammerspoon-config/hyper.lua</a>。</p>\n<p>这里使用 <code>F19</code> 作为 HyperKey，同时也支持将 <code>F19</code> 映射为 <code>cmd + alt + shift + ctrl</code>。大多数软件的快捷键绑定中是无法直接 <code>F19</code> 的，所以你可以使用 <code>cmd + alt + shift + ctrl</code> 来替代。</p>\n<p>编写 <code>init.lua</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\">hyper <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hyper'</span><span class=\"token punctuation\">)</span>\n\nhyper<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'com.google.chrome'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    bundleID <span class=\"token operator\">=</span> <span class=\"token string\">'com.google.chrome'</span><span class=\"token punctuation\">,</span>\n    hyper_key <span class=\"token operator\">=</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'com.ripperhe.Bob'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    bundleID <span class=\"token operator\">=</span> <span class=\"token string\">'com.ripperhe.Bob'</span><span class=\"token punctuation\">,</span>\n    local_bindings <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhyper<span class=\"token punctuation\">:</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'shift'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  hs<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>如上的代码可以实现：</p>\n<ol>\n<li>通过 <code>F19 + c</code>，启动 Chrome。</li>\n<li>通过 <code>cmd + alt + shift + ctrl + d</code>，启动 Bob 的划词翻译。</li>\n<li>通过 <code>F19 + shift + r</code>，刷新 Hammerspoon 的配置。</li>\n</ol>\n<p>使用 hidutil 将 <code>caplock</code> 改为 <code>F19</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">hidutil property --set <span class=\"token string\">'{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x700000039,\"HIDKeyboardModifierMappingDst\":0x70000006E}]}'</span></code></pre></div>\n<p>到此就实现了 <code>caplock</code> 作为 HyperKey 了。</p>\n<p>由于 Mac 重启后，hidutil 的改键会失效，所以还需要将 hidutil 的改键的代码写成 shell 脚本，并设置为可执行，然后通过「设置 - 用户和用户组 - 登录项」将脚本添加进来。</p>\n<p>也可以在 <code>~/Library/LaunchAgents</code> 中增加一个 <code>plist</code>，作为开机即执行的 <code>service</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"plist\"><pre class=\"language-plist\"><code class=\"language-plist\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;\n&lt;plist version=&quot;1.0&quot;&gt;\n  &lt;dict&gt;\n    &lt;key&gt;Label&lt;/key&gt;\n    &lt;string&gt;com.example.startup&lt;/string&gt;\n    &lt;key&gt;ProgramArguments&lt;/key&gt;\n    &lt;array&gt;\n      &lt;string&gt;zsh&lt;/string&gt;\n      &lt;string&gt;-c&lt;/string&gt;\n      &lt;string&gt;/Users/abc/startup.sh&lt;/string&gt;\n    &lt;/array&gt;\n    &lt;key&gt;RunAtLoad&lt;/key&gt;\n    &lt;true/&gt;\n  &lt;/dict&gt;\n&lt;/plist&gt;</code></pre></div>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://evantravers.com/articles/2020/06/08/hammerspoon-a-better-better-hyper-key/\">Hammerspoon: A Better, Better Hyper Key</a></li>\n</ul>","rawMarkdownBody":"\n一直在使用 [Karabiner-Elements](https://karabiner-elements.pqrs.org/) 的 HyperKey 的功能（将 cmd + option + control + shirft 绑定到 caplock）。\n\n但更新到 `Big sur` 后发现 HyperKey 不能用。而且到目前为止也没有等到更新，于是开始寻找替代方案。\n\n最终选择 [Hammerspoon](https://www.hammerspoon.org/) + [hidutil](https://developer.apple.com/library/archive/technotes/tn2450/_index.html) 。通过 Hammerspoon 实现快捷键的绑定，然后使用 hidutil 将 `caplock` 改为 HyperKey。\n\nHammerspoon 的安装见 [Getting Started with Hammerspoon](https://www.hammerspoon.org/go/)。\n\n```bash\nbrew install --cask hammerspoon\n```\n\n建立 Hammerspoon 的配置文件。\n\n```bash\nmkdir -p ~/.hammerspoon\ncd ~/.hammerspoon\ncurl -O https://github.com/evantravers/hammerspoon-config/blob/38a7d8c0ad2190d1563d681725628e4399dcbe6c/hyper.lua\ntouch init.lua\n```\n\nHyperKey 的实现参考了 [evantravers/hammerspoon-config/hyper.lua](https://github.com/evantravers/hammerspoon-config/blob/38a7d8c0ad2190d1563d681725628e4399dcbe6c/hyper.lua)。\n\n这里使用 `F19` 作为 HyperKey，同时也支持将 `F19` 映射为 `cmd + alt + shift + ctrl`。大多数软件的快捷键绑定中是无法直接 `F19` 的，所以你可以使用 `cmd + alt + shift + ctrl` 来替代。\n\n编写 `init.lua`。\n\n```lua\nhyper = require('hyper')\n\nhyper.start({\n  ['com.google.chrome'] = {\n    bundleID = 'com.google.chrome',\n    hyper_key = 'c',\n  },\n  ['com.ripperhe.Bob'] = {\n    bundleID = 'com.ripperhe.Bob',\n    local_bindings = {'d'}\n  },\n})\n\nhyper:bind({'shift'}, 'r', nil, function()\n  hs.reload()\nend)\n```\n\n如上的代码可以实现：\n\n1. 通过 `F19 + c`，启动 Chrome。\n2. 通过 `cmd + alt + shift + ctrl + d`，启动 Bob 的划词翻译。\n3. 通过 `F19 + shift + r`，刷新 Hammerspoon 的配置。\n\n使用 hidutil 将 `caplock` 改为 `F19`。\n\n```bash\nhidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x700000039,\"HIDKeyboardModifierMappingDst\":0x70000006E}]}'\n```\n\n到此就实现了 `caplock` 作为 HyperKey 了。\n\n由于 Mac 重启后，hidutil 的改键会失效，所以还需要将 hidutil 的改键的代码写成 shell 脚本，并设置为可执行，然后通过「设置 - 用户和用户组 - 登录项」将脚本添加进来。\n\n也可以在 `~/Library/LaunchAgents` 中增加一个 `plist`，作为开机即执行的 `service`。\n\n```plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>com.example.startup</string>\n    <key>ProgramArguments</key>\n    <array>\n      <string>zsh</string>\n      <string>-c</string>\n      <string>/Users/abc/startup.sh</string>\n    </array>\n    <key>RunAtLoad</key>\n    <true/>\n  </dict>\n</plist>\n```\n\n参考：\n\n- [Hammerspoon: A Better, Better Hyper Key](http://evantravers.com/articles/2020/06/08/hammerspoon-a-better-better-hyper-key/)\n","timeToRead":2,"wordCount":{"paragraphs":18,"sentences":18,"words":99},"frontmatter":{"title":"Hammerspoon 实现 HyperKey","tags":["Tech/Tools"],"created":"2020-11-19"}}},"pageContext":{"slug":"/Hammerspoon实现HyperKey/","language":"en","i18n":{"language":"en","languages":["en","zh"],"defaultLanguage":"en","routed":false,"resources":{"en":{"translation":{"home":"Home","not found":"Not found","create date":"CREATE DATE","search articles":"Search","articles":"Articles"}}},"originalPath":"/Hammerspoon实现HyperKey/","path":"/Hammerspoon实现HyperKey/"}}},"staticQueryHashes":["1985809839","1985809839","63159454"]}