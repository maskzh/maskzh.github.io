{"componentChunkName":"component---gatsby-theme-maskzh-src-templates-blog-post-tsx","path":"/Mac安装aria2以及开机自启/","result":{"data":{"site":{"siteMetadata":{"title":"ZYC's Blog"}},"markdownRemark":{"html":"<p>首先要安装 <a href=\"https://brew.sh/\">Homebrew</a> 。</p>\n<p>1、安装 aria2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install aria2</code></pre></div>\n<p>2、配置 aria2</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># 创建一个文件夹，用来放置 aria2 相关的文件\nmkdir -p ~/.aria2\n\ncd ~/.aria2\n\n# 创建配置文件\ntouch aria2.conf</code></pre></div>\n<p>建议的配置文件如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># 文件保存路径, 默认为当前启动位置\ndir=/Users/xxx/Downloads\n\n### RPC相关设置 ##\n\n# 允许rpc\nenable-rpc=true\n\n# 允许所有来源, web界面跨域权限需要\nrpc-allow-origin-all=true\n\n# 允许外部访问，false的话只监听本地端口\nrpc-listen-all=false\n\n# RPC端口, 仅当默认端口被占用时修改\n# rpc-listen-port=6800\n\n# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同\nevent-poll=kqueue\n\n# 用户名\n# rpc-user=user\n\n# 密码\n# rpc-passwd=passwd\n\n# 上面的认证方式不建议使用,建议使用下面的token方式\n\n# 设置加密的密钥\n# rpc-secret=token\n\n# 是否启用 RPC 服务的 SSL/TLS 加密,\n# 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接\n# rpc-secure=true\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,\n# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥\n# rpc-certificate=/path/to/certificate.pem\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件\n# rpc-private-key=/path/to/certificate.key\n\n### 进度保存相关 ##\n\n# 从会话文件中读取下载任务\n# 开启该参数后 aria2 将只接受 session 中的任务, 这意味着 aria2 一旦使用 conf 后将不再接受来自终端的任务, 所以该条只需要在启动rpc时加上就可以了，引用自 &lt;https://github.com/fsaimon/aria2.conf/blob/c4ff2f297b13e54e16952f83c423b0f1e656600c/aria2.conf#L37>\ninput-file=/Users/xxx/.aria2/aria2.session\n\n# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件\nsave-session=/Users/xxx/.aria2/aria2.session\n\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\nsave-session-interval=0\n\n### 下载连接相关 ##\n\n# 最大同时下载数(任务数), 路由建议值: 3\nmax-concurrent-downloads=5\n\n# 同服务器连接数\nmax-connection-per-server=16\n\n# 断点续传\ncontinue=true\n\n# 最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\nmin-split-size=10M\n\n# 单文件最大线程数, 路由建议值: 5\nsplit=16\n\n# 下载速度限制, 运行时可修改, 默认:0\n# max-overall-download-limit=0\n\n# 上传速度限制, 运行时可修改, 默认:0\n# max-overall-upload-limit=0\n\n# 单文件速度限制, 默认:0\n# max-download-limit=0\n\n# 单文件速度限制\nmax-upload-limit=0\n\n# 断开速度过慢的连接\nlowest-speed-limit=0\n\n# 禁用IPv6, 默认:false\n# disable-ipv6=true\n\n# 当服务器返回503错误时, aria2会尝试重连\n# 尝试重连次数, 0代表无限, 默认:5\nmax-tries=0\n\n# 重连冷却, 默认:0\n# retry-wait=0\n\n# 验证用，需要1.16.1之后的release版本\n# referer=*\n\n# 文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n# disk-cache=0\n\n# 另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n# enable-mmap=true\n\n# 文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n# 所需时间 none &lt; falloc ? trunc &lt;&lt; prealloc, falloc和trunc需要文件系统和内核支持\nfile-allocation=prealloc\n\n### BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\n# follow-torrent=true\n\n# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999\n# listen-port=51413\n\n# 单个种子最大连接数, 默认:55\n# bt-max-peers=55\n\n# 打开DHT功能, PT需要禁用, 默认:true\n# enable-dht=true\n\n# 打开IPv6 DHT功能, PT需要禁用\n# enable-dht6=false\n\n# DHT网络监听端口, 默认:6881-6999\n# dht-listen-port=6881-6999\n\n# 本地节点查找, PT需要禁用, 默认:false\nbt-enable-lpd=true\n\n# 种子交换, PT需要禁用, 默认:true\n# enable-peer-exchange=true\n\n# 每个种子限速, 对少种的PT很有用, 默认:50K\n# bt-request-peer-speed-limit=50K\n\n# 客户端伪装, PT需要\n# peer-id-prefix=-TR2770-\nuser-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36\n\n# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0\n# seed-ratio=1.0\n\n# 作种时间大于30分钟，则停止作种\nseed-time=30\n\n# 强制保存会话, 话即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n# force-save=false\n\n# BT校验相关, 默认:true\n# bt-hash-check-seed=true\n\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\n# 强制加密, 防迅雷必备\n# bt-require-crypto=true\n\n# 下载完成后删除 .aria2 的同名文件\n# on-download-complete=/Users/zyc/.aria2/delete_aria2</code></pre></div>\n<p>3、开机自启</p>\n<p>新增一个文件<code>/usr/local/opt/aria2/homebrew.mxcl.aria2.plist</code>，<code>/usr/local/opt/aria2</code>是<code>brew</code>安装<code>aria2</code>的目录，放下该目录下，<code>brew</code>就会将它识别出来。文件内容如下</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"&lt;http://www.apple.com/DTDs/PropertyList-1.0.dtd>\">\n&lt;plist version=\"1.0\">\n  &lt;dict>\n    &lt;key>Label&lt;/key>\n    &lt;string>homebrew.mxcl.aria2&lt;/string>\n    &lt;key>ProgramArguments&lt;/key>\n    &lt;array>\n      &lt;string>/usr/local/bin/aria2c&lt;/string>\n      &lt;string>--conf-path=/Users/xxx/.aria2/aria2.conf&lt;/string>\n    &lt;/array>\n    &lt;key>KeepAlive&lt;/key>\n    &lt;dict>\n      &lt;key>Crashed&lt;/key>\n      &lt;true/>\n      &lt;key>SuccessfulExit&lt;/key>\n      &lt;false/>\n    &lt;/dict>\n    &lt;key>ProcessType&lt;/key>\n    &lt;string>Background&lt;/string>\n    &lt;key>StandardErrorPath&lt;/key>\n    &lt;string>/usr/local/var/log/aria2.log&lt;/string>\n    &lt;key>StandardOutPath&lt;/key>\n    &lt;string>/usr/local/var/log/aria2.log&lt;/string>\n  &lt;/dict>\n&lt;/plist></code></pre></div>\n<p>使用 <code>brew services</code> 来管理它。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew services start aria2</code></pre></div>\n<p>现在 <code>aria2</code>可以开机自启了。你可以 <code>brew services list</code> 查看它的运行状态。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Name      Status  User Plist\naria2     started xxx  /Users/xxx/Library/LaunchAgents/homebrew.mxcl.aria2.plist</code></pre></div>\n<p>4、如何使用？</p>\n<p>按照上面的配置，现在可以通过 RPC <code>http://localhost:6800/jsonrpc</code>来管理你的下载了。\nps：因为使用 RPC 的方式，所以 <code>aria2</code> 不会接受来自终端的任务了。</p>\n<p>通过可视化的界面，可以让 <code>aria2</code> 更好地被使用。推荐的工具：</p>\n<ul>\n<li><a href=\"https://github.com/mayswind/AriaNg\">AriaNg</a> Web UI，通过可视化 UI 方便地管理下载。</li>\n<li><a href=\"https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc\">YAAW</a> Chrome 插件，可以方便地导出任务到 <code>aria2</code> 中，也自带一个 Web UI。</li>\n</ul>\n<p><strong>如果不想经历上面这么多的步骤，你也可以直接使用<a href=\"https://motrix.app/\">Motrix</a>🤐。</strong><a href=\"https://motrix.app/\">Motrix</a>是一个 Mac 客户端，集成了 <code>aria2</code>和简单友好的界面。强烈推荐 👍。但因为是基于 <code>electron</code>，启动速度有一点点慢。而且每次需要下载时，都要先将它启动。当然也可以设置让软件开机启动常驻后台。</p>","rawMarkdownBody":"\n首先要安装 [Homebrew](https://brew.sh/) 。\n\n1、安装 aria2\n\n```\nbrew install aria2\n```\n\n2、配置 aria2\n\n```\n# 创建一个文件夹，用来放置 aria2 相关的文件\nmkdir -p ~/.aria2\n\ncd ~/.aria2\n\n# 创建配置文件\ntouch aria2.conf\n```\n\n建议的配置文件如下：\n\n```\n# 文件保存路径, 默认为当前启动位置\ndir=/Users/xxx/Downloads\n\n### RPC相关设置 ##\n\n# 允许rpc\nenable-rpc=true\n\n# 允许所有来源, web界面跨域权限需要\nrpc-allow-origin-all=true\n\n# 允许外部访问，false的话只监听本地端口\nrpc-listen-all=false\n\n# RPC端口, 仅当默认端口被占用时修改\n# rpc-listen-port=6800\n\n# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同\nevent-poll=kqueue\n\n# 用户名\n# rpc-user=user\n\n# 密码\n# rpc-passwd=passwd\n\n# 上面的认证方式不建议使用,建议使用下面的token方式\n\n# 设置加密的密钥\n# rpc-secret=token\n\n# 是否启用 RPC 服务的 SSL/TLS 加密,\n# 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接\n# rpc-secure=true\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,\n# 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥\n# rpc-certificate=/path/to/certificate.pem\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件\n# rpc-private-key=/path/to/certificate.key\n\n### 进度保存相关 ##\n\n# 从会话文件中读取下载任务\n# 开启该参数后 aria2 将只接受 session 中的任务, 这意味着 aria2 一旦使用 conf 后将不再接受来自终端的任务, 所以该条只需要在启动rpc时加上就可以了，引用自 <https://github.com/fsaimon/aria2.conf/blob/c4ff2f297b13e54e16952f83c423b0f1e656600c/aria2.conf#L37>\ninput-file=/Users/xxx/.aria2/aria2.session\n\n# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件\nsave-session=/Users/xxx/.aria2/aria2.session\n\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\nsave-session-interval=0\n\n### 下载连接相关 ##\n\n# 最大同时下载数(任务数), 路由建议值: 3\nmax-concurrent-downloads=5\n\n# 同服务器连接数\nmax-connection-per-server=16\n\n# 断点续传\ncontinue=true\n\n# 最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要\nmin-split-size=10M\n\n# 单文件最大线程数, 路由建议值: 5\nsplit=16\n\n# 下载速度限制, 运行时可修改, 默认:0\n# max-overall-download-limit=0\n\n# 上传速度限制, 运行时可修改, 默认:0\n# max-overall-upload-limit=0\n\n# 单文件速度限制, 默认:0\n# max-download-limit=0\n\n# 单文件速度限制\nmax-upload-limit=0\n\n# 断开速度过慢的连接\nlowest-speed-limit=0\n\n# 禁用IPv6, 默认:false\n# disable-ipv6=true\n\n# 当服务器返回503错误时, aria2会尝试重连\n# 尝试重连次数, 0代表无限, 默认:5\nmax-tries=0\n\n# 重连冷却, 默认:0\n# retry-wait=0\n\n# 验证用，需要1.16.1之后的release版本\n# referer=*\n\n# 文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本\n# disk-cache=0\n\n# 另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)\n# enable-mmap=true\n\n# 文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长\n# 所需时间 none < falloc ? trunc << prealloc, falloc和trunc需要文件系统和内核支持\nfile-allocation=prealloc\n\n### BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\n# follow-torrent=true\n\n# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999\n# listen-port=51413\n\n# 单个种子最大连接数, 默认:55\n# bt-max-peers=55\n\n# 打开DHT功能, PT需要禁用, 默认:true\n# enable-dht=true\n\n# 打开IPv6 DHT功能, PT需要禁用\n# enable-dht6=false\n\n# DHT网络监听端口, 默认:6881-6999\n# dht-listen-port=6881-6999\n\n# 本地节点查找, PT需要禁用, 默认:false\nbt-enable-lpd=true\n\n# 种子交换, PT需要禁用, 默认:true\n# enable-peer-exchange=true\n\n# 每个种子限速, 对少种的PT很有用, 默认:50K\n# bt-request-peer-speed-limit=50K\n\n# 客户端伪装, PT需要\n# peer-id-prefix=-TR2770-\nuser-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36\n\n# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0\n# seed-ratio=1.0\n\n# 作种时间大于30分钟，则停止作种\nseed-time=30\n\n# 强制保存会话, 话即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n# force-save=false\n\n# BT校验相关, 默认:true\n# bt-hash-check-seed=true\n\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\n# 强制加密, 防迅雷必备\n# bt-require-crypto=true\n\n# 下载完成后删除 .aria2 的同名文件\n# on-download-complete=/Users/zyc/.aria2/delete_aria2\n```\n\n3、开机自启\n\n新增一个文件`/usr/local/opt/aria2/homebrew.mxcl.aria2.plist`，`/usr/local/opt/aria2`是`brew`安装`aria2`的目录，放下该目录下，`brew`就会将它识别出来。文件内容如下\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"<http://www.apple.com/DTDs/PropertyList-1.0.dtd>\">\n<plist version=\"1.0\">\n  <dict>\n    <key>Label</key>\n    <string>homebrew.mxcl.aria2</string>\n    <key>ProgramArguments</key>\n    <array>\n      <string>/usr/local/bin/aria2c</string>\n      <string>--conf-path=/Users/xxx/.aria2/aria2.conf</string>\n    </array>\n    <key>KeepAlive</key>\n    <dict>\n      <key>Crashed</key>\n      <true/>\n      <key>SuccessfulExit</key>\n      <false/>\n    </dict>\n    <key>ProcessType</key>\n    <string>Background</string>\n    <key>StandardErrorPath</key>\n    <string>/usr/local/var/log/aria2.log</string>\n    <key>StandardOutPath</key>\n    <string>/usr/local/var/log/aria2.log</string>\n  </dict>\n</plist>\n```\n\n使用 `brew services` 来管理它。\n\n```\nbrew services start aria2\n```\n\n现在 `aria2`可以开机自启了。你可以 `brew services list` 查看它的运行状态。\n\n```\nName      Status  User Plist\naria2     started xxx  /Users/xxx/Library/LaunchAgents/homebrew.mxcl.aria2.plist\n```\n\n4、如何使用？\n\n按照上面的配置，现在可以通过 RPC `http://localhost:6800/jsonrpc`来管理你的下载了。\nps：因为使用 RPC 的方式，所以 `aria2` 不会接受来自终端的任务了。\n\n通过可视化的界面，可以让 `aria2` 更好地被使用。推荐的工具：\n\n- [AriaNg](https://github.com/mayswind/AriaNg) Web UI，通过可视化 UI 方便地管理下载。\n- [YAAW](https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc) Chrome 插件，可以方便地导出任务到 `aria2` 中，也自带一个 Web UI。\n\n**如果不想经历上面这么多的步骤，你也可以直接使用[Motrix](https://motrix.app/)🤐。**[Motrix](https://motrix.app/)是一个 Mac 客户端，集成了 `aria2`和简单友好的界面。强烈推荐 👍。但因为是基于 `electron`，启动速度有一点点慢。而且每次需要下载时，都要先将它启动。当然也可以设置让软件开机启动常驻后台。\n","timeToRead":6,"wordCount":{"paragraphs":14,"sentences":14,"words":67},"frontmatter":{"title":"Mac 安装 aria2 以及开机自启","tags":["Tech/Tools"],"created":"2020-03-28"}}},"pageContext":{"slug":"/Mac安装aria2以及开机自启/","language":"en","i18n":{"language":"en","languages":["en","zh"],"defaultLanguage":"en","routed":false,"resources":{"en":{"translation":{"home":"Home","not found":"Not found","create date":"CREATE DATE","search articles":"Search","articles":"Articles"}}},"originalPath":"/Mac安装aria2以及开机自启/","path":"/Mac安装aria2以及开机自启/"}}},"staticQueryHashes":["1985809839","1985809839","63159454"]}